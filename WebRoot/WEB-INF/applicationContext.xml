<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 配置数据源信息 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/tjubooks">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
	</bean>
	
	<!-- 注册并配置链接工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources">
		  <list>
		    <value>tjubooks/po/Attentbook.hbm.xml</value>
		    <value>tjubooks/po/Book.hbm.xml</value>
		    <value>tjubooks/po/Category.hbm.xml</value>
		    <value>tjubooks/po/Requestbook.hbm.xml</value>
		    <value>tjubooks/po/User.hbm.xml</value>
		    <value>tjubooks/po/Bookimage.hbm.xml</value>
		  </list>
		</property>
	</bean>
	
	<!-- 注册Dao层数据访问对象，并将SessionFactory进行注入  -->
	<bean id="bookDao" class="tjubooks.dao.impl.BookDao"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="categoryDao" class="tjubooks.dao.impl.CategoryDao"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="userDao" class="tjubooks.dao.impl.UserDao"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="attentBookDao" class="tjubooks.dao.impl.AttentbookDao"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="requestBookDao" class="tjubooks.dao.impl.RequestbookDao"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="bookImageDao" class="tjubooks.dao.impl.BookimageDao"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	
	<!-- 注册Biz业务逻辑层的类对象，并将Dao数据访问层对象进行注入 -->
	<bean id="bookBiz" class="tjubooks.biz.impl.BookBiz"
		abstract="false" lazy-init="default" autowire="default">
		<property name="bookDao">
			<ref bean="bookDao" />
		</property>
		<property name="categoryDao">
			<ref bean="categoryDao"></ref>
		</property>
	</bean>
	<bean id="userBiz" class="tjubooks.biz.impl.UserBiz"
		abstract="false" lazy-init="default" autowire="default">
		<property name="userDao">
			<ref bean="userDao"/>
		</property>
	</bean>
	
	<bean id="imageBiz" class="tjubooks.biz.impl.ImageBiz"
		abstract="false" lazy-init="default" autowire="default">
		<property name="bookImageDao">
			<ref bean="bookImageDao"/>
		</property>
	</bean>
	
	<bean id="attentBookBiz" class="tjubooks.biz.impl.AttentBookBiz"
		abstract="false" lazy-init="default" autowire="default">
		<property name="attentBookDao">
			<ref bean="attentBookDao"/>
		</property>
	</bean>
	
	<bean id="requestBookBiz" class="tjubooks.biz.impl.RequestBookBiz"
		abstract="false" lazy-init="default" autowire="default">
		<property name="requestBookDao">
			<ref bean="requestBookDao"/>
		</property>
	</bean>
	
	<bean id="categoryBiz" class="tjubooks.biz.impl.CategoryBiz"
		abstract="false" lazy-init="default" autowire="default">
		<property name="categoryDao">
			<ref bean="categoryDao"/>
		</property>
	</bean>
	<!-- 注册Action控制器层的动作类对象，并将biz业务逻辑层对象进行注入-->	
	<bean id="bookAction" class="tjubooks.action.BookAction" abstract="false"
		scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
	<bean id="userAction" class="tjubooks.action.UserAction" abstract="false"
		scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
	</bean>
	
	<bean id="getImageAction" class="tjubooks.action.imageAction.GetImageAction" abstract="false"
		scope="prototype" lazy-init="default" autowire="default">
		<property name="imageBiz">
			<ref bean="imageBiz" />
		</property>
	</bean>
	
	<bean id="uploadImageAction" class="tjubooks.action.imageAction.UpLoadImageAction" abstract="false"
		scope="prototype" lazy-init="default" autowire="default">
		<property name="imageBiz">
			<ref bean="imageBiz" />
		</property>
	</bean>
	
	<!--	
    <bean id="userCenterAction" class="tjubooks.action.UserCenterAction" abstract="false"
		scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>

	-->
	
	<!-- 关于书籍的Action在此注册 -->
    <bean id="findBookByIdAction" class="tjubooks.action.bookAction.FindBookByIdAction" abstract="false"
		scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>

	<bean id="searchBookAcion" class="tjubooks.action.bookAction.SearchBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
	<bean id="bookOfCategoryAction" class="tjubooks.action.bookAction.BookOfCategoryAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
	<bean id="addBookAction" class="tjubooks.action.bookAction.AddBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
		<property name="imageBiz">
			<ref bean="imageBiz" />
		</property>
		<property name="categoryBiz">
			<ref bean="categoryBiz" />
		</property>
	</bean>
	
	<bean id="modifyBookAction" class="tjubooks.action.bookAction.ModifyBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
		<property name="imageBiz">
			<ref bean="imageBiz" />
		</property>
		<property name="categoryBiz">
			<ref bean="categoryBiz" />
		</property>
	</bean>
	
	<bean id="addRequestBookAction" class="tjubooks.action.bookAction.AddRequestBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="requestBookBiz">
			<ref bean="requestBookBiz" />
		</property>
	</bean>
	
	<bean id="recommendAction" class="tjubooks.action.recommendAction.recommendAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
	<bean id="publishBookAction" class="tjubooks.action.bookAction.PublishBookAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
	</bean>
	
	<bean id="publishreqBookAction" class="tjubooks.action.bookAction.PublishreqBookAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
	</bean>
	
	<!-- 与用户有关的Action在此注册 -->
	<!--
	<bean id="userInfoAction" class="tjubooks.action.userManageAction.UserInfoAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
	</bean>	
	-->
	<bean id="userLoginAction" class="tjubooks.action.userAction.UserLoginAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
	</bean>
	
	<bean id="userRegisterAction" class="tjubooks.action.userAction.UserRegisterAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
	</bean>
	
	<bean id="userLogoutAction" class="tjubooks.action.userAction.UserLogoutAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default"></bean>
	
	<bean id="modifyUserInfoAction" class="tjubooks.action.userCenterAction.ModifyUserInfoAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
	</bean>
	
	<bean id="userPasswordAction" class="tjubooks.action.userCenterAction.UserPasswordAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="userBiz">
			<ref bean="userBiz" />
		</property>
	</bean>
	
	
	<bean id="userReleasedBookAction" class="tjubooks.action.userCenterAction.UserReleasedBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
	<bean id="userUnlineBookAction" class="tjubooks.action.userCenterAction.UserUnlineBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
	<bean id="userSearchUnlineBookAction" class="tjubooks.action.userCenterAction.UserSearchUnlineBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="bookBiz">
			<ref bean="bookBiz" />
		</property>
	</bean>
	
 	<bean id="userRequestedBookAction" class="tjubooks.action.userCenterAction.UserRequestedBookAction"
		abstract="false" scope="prototype" lazy-init="default" autowire="default">
		<property name="requestBookBiz">
			<ref bean="requestBookBiz" />
		</property>
	</bean>
	 
	
	
	<bean id="userCenterAction" class="tjubooks.action.userCenterAction.UserCenterAction"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
	</bean>
	
	<!-- 配置拦截器 -->
	<bean id="authorityInterceptor" class="tjubooks.interceptor.authorityInterceptor"
	abstract="false" scope="prototype" lazy-init="default" autowire="default">
	</bean>
</beans>